<mxfile host="Electron" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/26.0.9 Chrome/128.0.6613.186 Electron/32.2.5 Safari/537.36" version="26.0.9">
  <diagram name="Page-1" id="xkog-0CbHqIXtxAfaAvf">
    <mxGraphModel dx="3260" dy="2024" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-59" value="" style="rounded=1;whiteSpace=wrap;html=1;rotation=90;fillColor=#e1d5e7;strokeColor=#9673a6;shadow=0;" vertex="1" parent="1">
          <mxGeometry x="341" y="1562" width="205" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-50" value="" style="rounded=1;whiteSpace=wrap;html=1;rotation=90;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="174" y="1265" width="535" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-41" value="" style="rounded=1;whiteSpace=wrap;html=1;rotation=90;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="-78" y="563" width="1043" height="60" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-29" value="" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-147" y="503" width="1283" height="155" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-1" value="&lt;b&gt;Break down the code into key aspects&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=3;" vertex="1" parent="1">
          <mxGeometry x="305" y="73" width="273" height="148" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-2" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;Prompt&lt;/b&gt;: identify_key_aspects_prompt&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;file&lt;/b&gt;: coding_prompt.py&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;expected output:&lt;/b&gt; JSON object&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;Example output:&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&lt;/span&gt;&lt;/div&gt;  &lt;span class=&quot;hljs-attr&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; class=&quot;hljs-attr&quot;&gt;&quot;key_aspects&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: [&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; class=&quot;hljs-string&quot;&gt;&quot;Assessing location-specific characteristics&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;,&lt;/span&gt;&lt;/div&gt;        &lt;span class=&quot;hljs-string&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; class=&quot;hljs-string&quot;&gt;&quot;Identifying implications of location for intervention effectiveness&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; class=&quot;hljs-string&quot;&gt;&quot;Modifying the intervention plan or activities&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;,&lt;/span&gt;&lt;/div&gt;        &lt;span class=&quot;hljs-string&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; class=&quot;hljs-string&quot;&gt;&quot;Adjusting resource allocation based on location&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot; class=&quot;hljs-string&quot;&gt;&quot;Tailoring communication or delivery methods to the locale&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;,&lt;/span&gt;&lt;/div&gt;        &lt;span class=&quot;hljs-string&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&quot;Making intervention context-dependent&quot;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;]&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="610" y="59" width="364" height="214" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-23" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="AScNVb7dmJ9JvbfS0WlG-4" target="AScNVb7dmJ9JvbfS0WlG-22">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-4" value="&lt;b&gt;Human in the loop: Confirm/Modify the key aspects for each code&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#D5E8D4,var(--ge-dark-color, #121212));shadow=1;dashed=1;" vertex="1" parent="1">
          <mxGeometry x="305" y="170" width="273" height="63" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-5" value="&lt;b&gt;Extract Quote/Reasoning based on the code&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=3;" vertex="1" parent="1">
          <mxGeometry x="305" y="513" width="273" height="144" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-6" value="&lt;b&gt;Human in the loop&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#D5E8D4,var(--ge-dark-color, #121212));shadow=1;" vertex="1" parent="1">
          <mxGeometry x="-615" y="139" width="167" height="38" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-8" value="&lt;b&gt;Execution blocks&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#FFFFFF,var(--ge-dark-color, #121212));shadow=1;" vertex="1" parent="1">
          <mxGeometry x="-615" y="193" width="167" height="38" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-11" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="37" y="259" width="18" height="26" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-12" value="Models: 4o-mini (high), Gemini 2.5 pro, maybe Gemini 2.5 flash (I didn&#39;t really like the output)&#xa;" style="rounded=1;whiteSpace=wrap;align=left;strokeColor=none;strokeWidth=0;" vertex="1" parent="1">
          <mxGeometry x="69" y="67" width="195" height="126" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-14" value="&lt;b&gt;Human in the loop: Add any project specific instructions&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#D5E8D4,var(--ge-dark-color, #121212));shadow=1;dashed=1;" vertex="1" parent="1">
          <mxGeometry x="305" y="503" width="273" height="63" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-15" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,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gARIgARIgARIgARIgARIgARIgARIgBYEfAdIgARIgARIgARIgARIgARIgARIgASUAIcY8DUgARIgARIgARIgARIgARIgARIgARKggoDvAAmQAAmQAAmQAAmQAAmQAAmQAAmQAC0I+A6QAAmQAAmQAAmQAAmQAAmQAAmQAAkoAQ4x4GtAAiRAAiRAAiRAAiRAAiRAAiRAAiRABQHfARIgARIgARIgARIgARIgARIgARIgAVoQ8B0gARIgARIgARIgARIgARIgARIgARJQAhxiwNeABEiABEiABEiABEiABEiABEiABEhAMvgZfHvgsH+T6yRAAiRAAiRAAiRAAiRAAiRAAiRAAjFCIF1AJUbulbdJAiRAAiRAAiRAAiRAAiRAAiRAAiQQgQCHGEQAw2ASIAESIAESIAESIAESIAESIAESiCUCVBDE0tPmvZIACZAACZAACZAACZAACZAACZBABAJUEEQAw2ASIAESIAESIAESIAESIAESIAESiCUCVBDE0tPmvZIACZAACZAACZAACZAACZAACZBABAJUEEQAw2ASIAESIAESIAESIAESIAESIAESiCUCVBDE0tPmvZIACZAACZAACZAACZAACZAACZBABAJUEEQAw2ASIAESIAESIAESIAESIAESIAESiCUCVBDE0tPmvZIACZAACZAACZAACZAACZAACZBABAJUEEQAw2ASIAESIAESIAESIAESIAESIAESiCUCVBDE0tPmvZIACZAACZAACZAACZAACZAACZBABAJUEEQAw2ASIAESIAESIAESIAESIAESIAESiCUCVBDE0tPmvZIACZAACZAACZAACZAACZAACZBABAJUEEQAw2ASIAESIAESIAESIAESIAESIAESiCUCVBDE0tPmvZIACZAACZAACZAACZAACZAACZBABAJUEEQAw2ASIAESIAESIAESIAESIAESIAESiCUCVBDE0tPmvZIACZAACZAACZAACZAACZAACZBABAJUEEQAw2ASIAESIAESIAESIAESIAESIAESiCUCVBDE0tPmvZIACZAACZAACZAACZAACZAACZBABAJUEEQAw2ASIAESIAESIAESIAESIAESIAESiCUCyaog+O2332Xbtp1y/PgfKc70yJGjMm36i/LLwUMpfm6ekASiJfDlnq/ku/3fR5v8b6f7+ZeD8vi4iXLwUMLf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CZAACZyzBKggOGcfLW+MBEiABEiABEiABEiABEiABEiABKInQAVB9KyYkgRIgARIgARIgARIgARIgARIgATOWQJUEJyzj5Y3RgIkQAIkQAIkQAIkQAIkQAIkQALRE6CCIHpWTEkCJEACJEACJEACJEACJEACJEAC5ywBKgjO2UfLGyMBEiABEiABEiABEiABEiABEiCB6AlQQRA9K6YkARIgARIgARIgARIgARIgARIggXOWABUE5+yj5Y2RAAmQAAmQAAmQAAmQAAmQAAmQQPQEqCCInhVTkgAJkAAJkAAJkAAJkAAJkAAJkMA5S4AKgnP20fLGSIAESIAESIAESIAESIAESIAESCB6AlQQRM+KKUmABEiABEiABEiABEiABEiABEjgnCVABcE5+2h5YyRAAiRAAiRAAiRAAiRAAiRAAiQQPQEqCKJnxZQkQAIkQAIkQAIkQAIkQAIkQAIkcM4SoILgnH20vDESIAESIAESIAESIAESIAESIAESiJ5ABn/Sbw8c9m9ynQRIgARIgARIgARIgARIgARIgARIIEYIpAuoxMi98jZJgARIgARIgARIgARIgARIgARIgAQiEOAQgwhgGEwCJEACJEACJEACJEACJEACJEACsUSACoJYetq8VxIgARIgARIgARIgARIgARIgARKIQIAKgghgGEwCJEACJEACJEACJEACJEACJEACsUSACoJYetq8VxIgARIgARIgARIgARIgARIgARKIQIAKgghgGEwCJEACJEACJEACJEACJEACJEACsUSACoJYetq8VxIgARIgARIgARIgARIgARIgARKIQIAKgghgGEwCJEACJEACJEACJEACJEACJEACsUSACoJYetq8VxIgARIgARIgARIgARIgARIgARKIQIAKgghgGEwCJEACJEACJEACJEACJEACJEACsUSACoJYetq8VxIgARIgARIgARIgARIgARIgARKIQIAKgghgGEwCJEACJEACJEACJEACJEACJEACsUSACoJYetq8VxIgARIgARIgARIgARIgARIgARKIQIAKgghgGEwCJEACJEACJEACJEACJEACJEACsUSACoJYetq8VxIgARIgARIgARIgARIgARIgARKIQIAKgghgGEwCJEACJEACJEACJEACJEACJEACsUSACoJYetq8VxIgARIgARIgARIgARIgARIg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IAESIAESIIGzRIAKgrMEnqclARIgARIgARIgARIgARIgARIggdREgAqC1PQ0eC0kQAIkQAIkQAIkQAIkQAIkQAIkcJYIUEFwlsDztCRAAiRAAiRAAiRAAiRAAiRAAiSQmghQQZCangavhQRIgARIgARIgARIgARIgARIgATOEgEqCM4SeJ6WBEiABEiABEiABEiABEiABEiABFITASoIUtPT4LWQAAmQAAmQAAmQAAmQAAmQAAmQwFkiQAXBWQLP05IACZAACZAACZAACZAACZAACZBAaiJABUFqehq8FhIgARIgARIgARIgARIgARIgARI4SwSoIDhL4HlaEiABEiABEiABEiABEiABEiABEkhNBKggSE1Pg9dCAiRAAiRAAiRAAiRAAiRAAiRAAmeJABUEZwk8T0sCJEACJEACJEACJEACJEACJEACqYkAFQSp6WnwWkiABEiABEiABEiABEiABEiABEjgLBGgguAsgedpSYAESIAESIAESIAESIAESIAESCA1EaCCIDU9DV4LCZAACZAACZAACZAACZAACZAACZwlAlQQnCXwPC0JkAAJkAAJkAAJkAAJkAAJkAAJpCYCVBCkpqfBayEBEiABEiABEiABEiABEiABEiCBs0Tg/2ykR7omto8HAAAAAElFTkSuQmCC;" vertex="1" parent="1">
          <mxGeometry x="-1305" y="43" width="619.22" height="226.81" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-16" value="&lt;b&gt;Model Cost&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#D4E1F5,var(--ge-dark-color, #121212));shadow=1;" vertex="1" parent="1">
          <mxGeometry x="-1307" y="-16" width="1085" height="34" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-18" value="&lt;b&gt;Tools&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#E6E6E6,var(--ge-dark-color, #121212));shadow=1;" vertex="1" parent="1">
          <mxGeometry x="-615" y="253" width="167" height="38" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-19" value="&lt;b&gt;Tools (o4 only)&lt;/b&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;div style=&quot;text-align: left;&quot;&gt;When a quote/reasoning pair is found it uses the tool to append it to the state&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#E6E6E6,var(--ge-dark-color, #121212));shadow=1;" vertex="1" parent="1">
          <mxGeometry x="124" y="502" width="167" height="127" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-20" value="Models: o4-mini (high) with tools &#xa;o4-mini can call several tools in it&#39;s chain of thought &#xa;" style="rounded=1;whiteSpace=wrap;align=left;strokeColor=none;strokeWidth=0;fillColor=default;" vertex="1" parent="1">
          <mxGeometry x="-141" y="503" width="215" height="126" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-24" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="AScNVb7dmJ9JvbfS0WlG-22" target="AScNVb7dmJ9JvbfS0WlG-14">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-22" value="&lt;b&gt;Define the intervention for each case&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=3;" vertex="1" parent="1">
          <mxGeometry x="305" y="299" width="273" height="144" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-25" value="&lt;b&gt;Human in the loop: Confirm/Modify the intervention&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#D5E8D4,var(--ge-dark-color, #121212));shadow=1;dashed=1;" vertex="1" parent="1">
          <mxGeometry x="305" y="394" width="273" height="63" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-26" value="Models: Gemini 2.5 flash thinking&#xa;Works in google AI studio but not in chat app &#xa;" style="rounded=1;whiteSpace=wrap;align=left;strokeColor=none;strokeWidth=0;" vertex="1" parent="1">
          <mxGeometry x="69" y="286.5" width="215" height="126" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-27" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;Prompt&lt;/b&gt;: identify_intervention&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;file&lt;/b&gt;: coding_prompt.py&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;expected output:&lt;/b&gt; one sentence defining the intervention&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;Example output:&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); text-align: center;&quot;&gt;The intervention is unconditional cash transfers provided to poor households.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="610" y="304" width="524" height="84" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-28" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;Prompt&lt;/b&gt;: identify_evidence_prompt&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;file&lt;/b&gt;: coding_prompt.py&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;expected output:&lt;/b&gt;&amp;nbsp;tool calls (each tool call returns a json with (quote, reasoning, aspect and chronology&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="610" y="509" width="567" height="70" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-30" value="Parallel execution" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-618" y="315" width="170" height="38" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-31" value="&lt;b&gt;Each code with each text (repeat for each case)&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#FFFFFF,var(--ge-dark-color, #121212));shadow=0;strokeColor=none;fontColor=#0000FF;fontSize=17;" vertex="1" parent="1">
          <mxGeometry x="-140" y="455" width="214" height="38" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-35" value="&lt;b&gt;Graph the stats from quote/reasoning pairs:&lt;/b&gt;&lt;div&gt;&lt;b&gt;Graph 1:&lt;/b&gt; Proofs per code (total evidence)&lt;/div&gt;&lt;div&gt;&lt;b&gt;Graph 2: &lt;/b&gt;Proofs per code per aspect&lt;/div&gt;&lt;div&gt;&lt;b&gt;Graph 3: &lt;/b&gt;Proof per document&lt;/div&gt;&lt;div&gt;&lt;b&gt;Graph 4: &lt;/b&gt;Proof per code per aspect per doc&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=3;dashed=1;dashPattern=8 8;" vertex="1" parent="1">
          <mxGeometry x="305" y="740" width="273" height="144" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-36" value="&lt;b&gt;LLM nodes&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=3;" vertex="1" parent="1">
          <mxGeometry x="-614" y="85" width="166" height="38" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-37" value="&lt;b&gt;Standard Programming&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=3;dashed=1;dashPattern=8 8;" vertex="1" parent="1">
          <mxGeometry x="-614" y="31" width="166" height="38" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-39" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="AScNVb7dmJ9JvbfS0WlG-5" target="AScNVb7dmJ9JvbfS0WlG-35">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="623" y="716" as="sourcePoint" />
            <mxPoint x="673" y="666" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-43" value="Phase 1" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="-401" y="28" width="170" height="38" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-44" value="Phases" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontStyle=1" vertex="1" parent="1">
          <mxGeometry x="-345" y="-12" width="58" height="26" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-45" value="Legend" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontStyle=1" vertex="1" parent="1">
          <mxGeometry x="-560.5" y="-12" width="58" height="26" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-60" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="AScNVb7dmJ9JvbfS0WlG-46" target="AScNVb7dmJ9JvbfS0WlG-49">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-46" value="&lt;b&gt;Thematic Analysis and Exemplar selection&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=3;" vertex="1" parent="1">
          <mxGeometry x="305" y="975" width="273" height="144" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-47" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="AScNVb7dmJ9JvbfS0WlG-35" target="AScNVb7dmJ9JvbfS0WlG-46">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="497" y="831" as="sourcePoint" />
            <mxPoint x="547" y="781" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-49" value="&lt;b&gt;Evaluate Evidence against the full text&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=3;" vertex="1" parent="1">
          <mxGeometry x="305" y="1210" width="273" height="144" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-51" value="Phase 2" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="-401" y="85" width="170" height="38" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-52" value="&lt;b&gt;Generate transversal evidence&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=3;" vertex="1" parent="1">
          <mxGeometry x="305" y="1424" width="273" height="144" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-53" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;Prompt&lt;/b&gt;: synthesize_evidence&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;file&lt;/b&gt;: coding_prompt.py&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="594" y="1015" width="181" height="55" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-54" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;Prompt&lt;/b&gt;: synthesize_evidence&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;file&lt;/b&gt;: coding_prompt.py&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="594" y="1247" width="181" height="55" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-55" value="Models: TBD but I doubt there will be a significant difference between o3, o4-mini high, gemini 2.5 pro and gemini 2.5 flash thinking&#xa;" style="rounded=1;whiteSpace=wrap;align=left;strokeColor=none;strokeWidth=0;fillColor=default;" vertex="1" parent="1">
          <mxGeometry x="64" y="984" width="215" height="126" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-56" value="Models: Gemini 2.5 flash thinking or gemini 2.5 pro depending on the cost&#xa;" style="rounded=1;whiteSpace=wrap;align=left;strokeColor=none;strokeWidth=0;fillColor=default;" vertex="1" parent="1">
          <mxGeometry x="59" y="1225" width="215" height="126" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-57" value="Models: Gemini 2.5 flash thinking or gemini 2.5 pro depending on the cost&#xa;" style="rounded=1;whiteSpace=wrap;align=left;strokeColor=none;strokeWidth=0;fillColor=default;" vertex="1" parent="1">
          <mxGeometry x="55" y="1418" width="215" height="126" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-58" value="Finish this" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=3;" vertex="1" parent="1">
          <mxGeometry x="305" y="1645" width="273" height="144" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-61" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="AScNVb7dmJ9JvbfS0WlG-49" target="AScNVb7dmJ9JvbfS0WlG-52">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="507" y="1390" as="sourcePoint" />
            <mxPoint x="507" y="1481" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-63" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="AScNVb7dmJ9JvbfS0WlG-52" target="AScNVb7dmJ9JvbfS0WlG-58">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="433" y="1588" as="sourcePoint" />
            <mxPoint x="433" y="1658" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-64" value="Phase 3" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#e1d5e7;strokeColor=#9673a6;" vertex="1" parent="1">
          <mxGeometry x="-401" y="147" width="170" height="38" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-65" value="&lt;b&gt;Qualitative coding workflow&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#D4E1F5,var(--ge-dark-color, #121212));shadow=1;" vertex="1" parent="1">
          <mxGeometry x="-135" y="-16" width="1271" height="34" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-66" value="&lt;b&gt;State&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#D4E1F5,var(--ge-dark-color, #121212));shadow=1;" vertex="1" parent="1">
          <mxGeometry x="1327" y="-16" width="364" height="34" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-67" value="&lt;b&gt;Function&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#D4E1F5,var(--ge-dark-color, #121212));shadow=1;" vertex="1" parent="1">
          <mxGeometry x="1724" y="-16" width="753" height="34" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-68" value="from typing import TypedDict, List, Dict, Optional&#xa;&#xa;class CodingInputState(TypedDict):&#xa;    research_question: str&#xa;    code_list: List[str]&#xa;    case_dict: List[Dict]&#xa;&#xa;class CodingState(CodingInputState):&#xa;    case_interventions: Dict[str, str]&#xa;    codes_to_process_aspects: List[str]&#xa;&#xa;&#xa;&#xa;&#xa;&#xa;" style="rounded=1;whiteSpace=wrap;align=left;strokeColor=none;strokeWidth=0;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="1332" y="42" width="354" height="615" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-70" value="Documentation needed: &#xa;Reducers: https://langchain-ai.github.io/langgraph/concepts/low_level/?h=reducer#reducers&#xa;map-reduce: https://langchain-ai.github.io/langgraph/how-tos/map-reduce/&#xa;Branches for parallel execution: https://langchain-ai.github.io/langgraph/how-tos/branching/&#xa;Using tool calling: https://langchain-ai.github.io/langgraph/how-tos/tool-calling/&#xa;Forcing an agent to use tool calling: https://langchain-ai.github.io/langgraph/how-tos/force-calling-a-tool-first/&#xa;how to add and use subgraphs: https://langchain-ai.github.io/langgraph/how-tos/subgraph/&#xa;how to transform inputs and outputs of a subgraph: https://langchain-ai.github.io/langgraph/how-tos/subgraph-transform-state/&#xa;How do define graph state: https://langchain-ai.github.io/langgraph/how-tos/define-state/&#xa;How to separate input and output schema: https://langchain-ai.github.io/langgraph/how-tos/input_output_schema/&#xa;how to have an agent answer in structured format: https://langchain-ai.github.io/langgraph/how-tos/respond-in-format/&#xa;send: https://langchain-ai.github.io/langgraph/concepts/low_level/?h=send#send&#xa;&#xa;" style="rounded=1;whiteSpace=wrap;align=left;strokeColor=none;strokeWidth=0;" vertex="1" parent="1">
          <mxGeometry x="2484" y="113" width="794" height="283" as="geometry" />
        </mxCell>
        <mxCell id="AScNVb7dmJ9JvbfS0WlG-71" value="&lt;b&gt;Documentation&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#D4E1F5,var(--ge-dark-color, #121212));shadow=1;" vertex="1" parent="1">
          <mxGeometry x="2507" y="-16" width="753" height="34" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
